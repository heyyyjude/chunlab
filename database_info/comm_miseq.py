# coding: utf-8
from sqlalchemy import BigInteger, Column, DateTime, Float, Integer, String, Text, text
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()
metadata = Base.metadata


class CommMiseq(Base):
    __tablename__ = 'comm_miseq'

    uid = Column(Integer, primary_key=True)
    stamp_insert = Column(DateTime, nullable=False, server_default=text("'2000-01-01 00:00:00'"))
    stamp_update = Column(DateTime, nullable=False, server_default=text("'2000-01-01 00:00:00'"))
    user_uid = Column(Integer, index=True, server_default=text("'-1'"))
    order_uid = Column(Integer, index=True, server_default=text("'-1'"))
    sample_uid = Column(Integer, index=True, server_default=text("'-1'"))
    user_sample_name = Column(String(250))
    pfid = Column(String(250), index=True)
    sample_source = Column(String(250))
    sample_description = Column(Text)
    run_uid = Column(Integer, index=True, server_default=text("'-1'"))
    data_uid = Column(Integer, server_default=text("'-1'"))
    target_taxon = Column(String(250), index=True, server_default=text("'N/A'"))
    primer_for = Column(String(100))
    primer_rev = Column(String(100))
    n_total_reads = Column(Integer, server_default=text("'-1'"))
    n_non_target = Column(Integer, server_default=text("'-1'"))
    n_non_specific_amplicon = Column(Integer, server_default=text("'-1'"))
    n_chimera = Column(Integer, server_default=text("'-1'"))
    n_reads = Column(Integer, server_default=text("'-1'"))
    n_reads_target = Column(Integer, server_default=text("'-1'"))
    n_read_identified_at_species = Column(Integer, server_default=text("'-1'"))
    n_identified_species = Column(Integer, server_default=text("'-1'"))
    min_len = Column(Integer, server_default=text("'-1'"))
    max_len = Column(Integer, server_default=text("'-1'"))
    avg_len = Column(Float(asdecimal=True), server_default=text("'-1'"))
    comm_ver = Column(String(100), index=True)
    tax_database_version = Column(String(200), index=True)
    db_gene = Column(String(200), index=True)
    db_ver = Column(String(200))
    db_taxon = Column(String(200))
    raw_n_reads_for = Column(Integer, server_default=text("'-1'"))
    raw_min_len_for = Column(Integer, server_default=text("'-1'"))
    raw_max_len_for = Column(Integer, server_default=text("'-1'"))
    raw_avg_len_for = Column(Float(asdecimal=True), server_default=text("'-1'"))
    raw_n_reads_rev = Column(Integer, server_default=text("'-1'"))
    raw_min_len_rev = Column(Integer, server_default=text("'-1'"))
    raw_max_len_rev = Column(Integer, server_default=text("'-1'"))
    raw_avg_len_rev = Column(Float(asdecimal=True), server_default=text("'-1'"))
    qual_trim_n_reads_for = Column(Integer, server_default=text("'-1'"))
    qual_trim_min_len_for = Column(Integer, server_default=text("'-1'"))
    qual_trim_max_len_for = Column(Integer, server_default=text("'-1'"))
    qual_trim_avg_len_for = Column(Float(asdecimal=True), server_default=text("'-1'"))
    qual_trim_n_reads_rev = Column(Integer, server_default=text("'-1'"))
    qual_trim_min_len_rev = Column(Integer, server_default=text("'-1'"))
    qual_trim_max_len_rev = Column(Integer, server_default=text("'-1'"))
    qual_trim_avg_len_rev = Column(Float(asdecimal=True), server_default=text("'-1'"))
    merged_n_reads = Column(Integer, server_default=text("'-1'"))
    merged_min_len = Column(Integer, server_default=text("'-1'"))
    merged_max_len = Column(Integer, server_default=text("'-1'"))
    merged_avg_len = Column(Float(asdecimal=True), server_default=text("'-1'"))
    primer_trim_n_reads = Column(Integer, server_default=text("'-1'"))
    primer_trim_min_len = Column(Integer, server_default=text("'-1'"))
    primer_trim_max_len = Column(Integer, server_default=text("'-1'"))
    primer_trim_avg_len = Column(Float(asdecimal=True), server_default=text("'-1'"))
    length_trim_n_reads = Column(Integer, server_default=text("'-1'"))
    length_trim_min_len = Column(Integer, server_default=text("'-1'"))
    length_trim_max_len = Column(Integer, server_default=text("'-1'"))
    length_trim_avg_len = Column(Float(asdecimal=True), server_default=text("'-1'"))
    n_too_short_seq = Column(Integer, server_default=text("'-1'"))
    n_too_long_seq = Column(Integer, server_default=text("'-1'"))
    n_rev_complementary = Column(Integer, server_default=text("'-1'"))
    denoise_exec = Column(String(100))
    denoise_min_overlap = Column(Integer, server_default=text("'-1'"))
    denoise_no_mismatch_allowed = Column(Integer, server_default=text("'-1'"))
    denoise_no_contig = Column(Integer, server_default=text("'-1'"))
    start_time = Column(BigInteger, server_default=text("'-1'"))
    elepse_time_denoise = Column(Integer, server_default=text("'-1'"))
    elepse_time_chimera = Column(Integer, server_default=text("'-1'"))
    elepse_time_assign = Column(Integer, server_default=text("'-1'"))
    elepse_time_profile = Column(Integer, server_default=text("'-1'"))
    elepse_time_clustering = Column(Integer, server_default=text("'-1'"))
    elepse_time_stat = Column(Integer, server_default=text("'-1'"))
    end_time = Column(BigInteger, server_default=text("'-1'"))
    phylum_comp = Column(String(255))


class TblMc(Base):
    __tablename__ = 'tbl_mc'

    uid = Column(Integer, primary_key=True)
    f_order_uid = Column(Integer, index=True, server_default=text("'-1'"))
    f_run_id = Column(String(100), index=True)
    n_samples = Column(Integer)
    f_completion_date = Column(DateTime, server_default=text("CURRENT_TIMESTAMP"))
    f_download = Column(Text)
    f_summary = Column(Text)
    f_my_comment = Column(Text)
    f_admin_comment = Column(Text)
    user_uid = Column(Integer)
    share_user_uid = Column(String(500))
